#What is Categorical Data?
  Categorical data are variables that contain label values rather than numeric values.
  The number of possible values is ofter limited to a fixed set.
  Categorical variables are often called nominal.
  some examples include:
    *A pet variable with the values: 'dog' and 'cat'.
    *A color variable with the values: 'red', 'green' and 'blue'
    *A place variable with the values: 'first', 'second' and 'third'.
  Each value represents a different category.

Some categories may have a natural relationship to each other, such as a natural ordering.
The 'place' variable above does have a natural ordering of values. This type of categorical variable is called an ordinal variable.
#What is the Problem with Categorical Data?
  Some algorithms can work with categorical data directly.
  For example, a decision tree can be learned directly form categorical data with no data transform required (this depend on the specific implementation).
  Many machine learning algorithms cannot operate on label data directly. They require all input variables and output variables to be numeric.
  In general, this is mostly a constraint of the efficient implementation of machine learning algorithms rather than hard limitations on the algorithms themselves.
  This means that categorical data must be converted to a numerical form. If the categorical is an output variables, you may also want to convart predictions by the model back into a categorical form in order to present them or user them in some application.
#How to Convert Categorical Data to Numerical Data?
This involves two steps:
  1.Integer Encoding
    As a first step, each unique category calue is assigned an integer value.
    For example, 'red' is 1, 'green' is 2, and 'blue' is 3.
  2.One-Hot Encoding
    For categorical variables where no such ordinal relationship exists, the integer encoding is not enough.
    In fact, using this encoding and allowing the model to assume a natural ordering between categories may result in poor performance or unexpected results (predictions halway between categories).
    In this case, a one-hot encoding can be applied to integer representation. This is where the integer encoded cariable is removed and a new binary variable is added for each unique integer value.
    In the 'color' variable example, there are 3 categories and therefore 3 binary variables are needed. A '1' value is placed in the binary variable for the color and '0' values for the other colors.
